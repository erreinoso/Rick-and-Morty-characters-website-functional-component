{"version":3,"sources":["images/RickandMorty.png","images/RickAndMorty33.jpg","images/RickAndMortyError.png","components/CharacterCard.js","components/CharacterList.js","components/CharacterDetail.js","components/Filters.js","services/getDataFromApi.js","components/App.js","index.js"],"names":["module","exports","CharacterCard","props","style","textDecoration","to","id","className","src","image","alt","name","species","CharacterList","console","log","characters","length","filterText","charactersList","map","character","index","key","CharacterDetail","onClick","ev","preventDefault","class","status","iconFunction","origin","episodes","Filters","handleFilter","handleFilters","currentTarget","LogoSearch","onSubmit","type","placeholder","value","filterName","onChange","htmlFor","filterSpecies","filterStatus","filterGender","LogoTitle","getDataFromApi","fetch","then","response","json","data","results","sort","a","b","App","useState","setCharacters","localStorage","getItem","setFilterName","setFilterSpecies","setFilterStatus","setFilterGender","useEffect","setItem","exact","path","toLowerCase","filter","toUpperCase","includes","gender","render","routeCharacterId","parseInt","match","params","characterId","characterClicked","find","episode","ImgError","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.85c17666.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/RickandMorty.75509f2e.png\";","module.exports = __webpack_public_path__ + \"static/media/RickAndMorty33.e8c11f08.jpg\";","module.exports = __webpack_public_path__ + \"static/media/RickAndMortyError.982e1bff.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport '../stylesheets/CharacterList.scss';\r\n\r\nfunction CharacterCard(props) {\r\n  return (\r\n    <Link style={{ textDecoration: 'none' }} to={`/character/${props.id}`}>\r\n      <li className={`serieCard serieCard-${props.id}`}>\r\n        <div className={`serieCard__img serieCard__img-${props.id}`}>\r\n          <img src={props.image} alt={`Imagen de ${props.name}`} />\r\n        </div>\r\n        <div className=\"serieCard__text\">\r\n          <h2 className=\"name\">{props.name}</h2>\r\n          <h3 className=\"species\">\r\n            {props.species} {props.species === 'Alien' ? 'ðŸ‘½' : 'ðŸ§‘'}\r\n          </h3>\r\n        </div>\r\n      </li>\r\n    </Link>\r\n  );\r\n}\r\nCharacterCard.propTypes = {\r\n  species: PropTypes.string,\r\n  name: PropTypes.string,\r\n  id: PropTypes.number,\r\n};\r\n\r\nexport default CharacterCard;\r\n","import React from 'react';\r\nimport CharacterCard from './CharacterCard';\r\nimport '../stylesheets/CharacterList.scss';\r\n\r\n\r\nconst CharacterList = (props) => {\r\n  \r\n  console.log('character list',props.characters.length);\r\n\r\n  if (props.characters.length === 0 ){\r\n    return (\r\n      <main>\r\n        <ul className=\"list\">\r\n            <p className=\"list__error\">\r\n              No hay ningun personaje que coincida con {props.filterText}\r\n            </p>\r\n        </ul>\r\n      </main>)\r\n          \r\n  }else{\r\n\r\n  const charactersList =props.characters.map((character, index) => {\r\n      return (\r\n          <CharacterCard\r\n              key={index}\r\n              id={character.id}\r\n              name={character.name}\r\n              species={character.species}\r\n              image={character.image}\r\n            />\r\n        );\r\n  })\r\n\r\n  return (\r\n  <main>\r\n    <ul className=\"list\">{charactersList} </ul>\r\n  </main>);}\r\n}\r\n\r\n\r\nexport default CharacterList;\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../stylesheets/Characterdetail.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CharacterDetail = (props) => {\r\n  const handleModalContentClick = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  const iconFunction = () => {\r\n    const status = props.status;\r\n    // eslint-disable-next-line no-unused-vars\r\n    let icon;\r\n    if (props.status === 'Dead') {\r\n      icon = 'far fa-dizzy';\r\n    } else if (status === 'Alive') {\r\n      icon = 'far fa-smile-beam';\r\n    } else {\r\n      icon = 'fas fa-question';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Link style={{ textDecoration: 'none' }} to=\"/\">\r\n        <div className=\"detailCard\" onClick={handleModalContentClick}>\r\n          <Link style={{ textDecoration: 'none' }} to=\"/\">\r\n            <span className=\"detailCard__back\">\r\n              <i class=\"fas fa-backward\"></i> Volver{' '}\r\n            </span>\r\n          </Link>\r\n          <div className=\"detailCard__img\">\r\n            <img src={props.image} alt={`Imagen de ${props.name}`} />\r\n          </div>\r\n          <div className=\"detailCard__text\">\r\n            <h2>{props.name}</h2>\r\n            <ul className=\"detailsList\">\r\n              <li>\r\n                Status: <span className=\"listData\">{props.status} </span>{' '}\r\n                <i class={iconFunction()}></i>\r\n              </li>\r\n              <li>\r\n                Species: <span className=\"listData\">{props.species} </span>\r\n                {props.status === 'Alien' ? (\r\n                  <i class=\"fab fa-reddit-alien\"></i>\r\n                ) : (\r\n                  <i class=\"far fa-user\"></i>\r\n                )}\r\n              </li>\r\n              <li>\r\n                Origin: <span className=\"listData\">{props.origin.name}</span>\r\n              </li>\r\n              <li>\r\n                Episodes: <span className=\"listData\">{props.episodes}</span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nCharacterDetail.propTypes = {\r\n  name: PropTypes.string,\r\n  species: PropTypes.string,\r\n  status: PropTypes.string,\r\n  origin: PropTypes.string,\r\n  episodes: PropTypes.number,\r\n  id: PropTypes.number,\r\n  handleModalContentClick: PropTypes.func,\r\n};\r\n\r\nexport default CharacterDetail;\r\n","import React from 'react';\r\nimport LogoTitle from '../images/RickandMorty.png';\r\nimport LogoSearch from '../images/RickAndMorty33.jpg';\r\nimport '../stylesheets/Filters.scss';\r\n\r\nconst Filters = (props) => {\r\n  // Recogemos el valor introducido en el input y lo pasamos por lifting al componente manejador App\r\n  const handleFilter = (ev) => {\r\n    props.handleFilters(ev.currentTarget);\r\n  };\r\n\r\n  const handleModalContentClick = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <section className=\"header__box\">\r\n        <div className=\"header__img\">\r\n          <img\r\n            src={LogoSearch}\r\n            className=\"header__img\"\r\n            alt=\"Imagen Rick y Morty hablando\"\r\n          />\r\n        </div>\r\n        <div className=\"header__input\">\r\n          <form onSubmit={handleModalContentClick}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Nombre del personaje...\"\r\n              key=\"filterName\"\r\n              id=\"filterName\"\r\n              value={props.filterName}\r\n              onChange={handleFilter}\r\n            />\r\n          </form>\r\n        </div>\r\n{/* // */}\r\n<div className='header--filter__box'>\r\n            <label htmlFor='filterSpecies' className='form__label '>\r\n              Specy:\r\n            </label>\r\n            <select\r\n              id='filterSpecies'\r\n              value={props.filterSpecies}\r\n              onChange={handleFilter}\r\n            >\r\n              <option value='all'>All</option>\r\n              <option value='Human'>Human</option>\r\n              <option value='Alien'>Alien</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className='header--filter__box'>\r\n            <label htmlFor='filterStatus' className='form__label '>\r\n              Vital status:\r\n            </label>\r\n            <select\r\n              id='filterStatus'\r\n              value={props.filterStatus}\r\n              onChange={handleFilter}\r\n            >\r\n              <option value='all'>All</option>\r\n              <option value='Alive'>Alive</option>\r\n              <option value='Dead'>Dead</option>\r\n              <option value='unknown'>Unknown</option>\r\n            </select>\r\n          </div>\r\n          <div className='header--filter__box'>\r\n            <label htmlFor='filterGender' className='form__label '>\r\n            Gender:\r\n            </label>\r\n            <select\r\n              id='filterGender'\r\n              value={props.filterGender}\r\n              onChange={handleFilter}\r\n            >\r\n              <option value='all'>All</option>\r\n              <option value='Female'>Female</option>\r\n              <option value='Male'>Male</option>\r\n            </select>\r\n          </div>\r\n{/* // */}\r\n        <div className=\"header__box--title\">\r\n          <div className=\"header__logo\">\r\n            <img\r\n              src={LogoTitle}\r\n              className=\"header__logo\"\r\n              alt=\"Imagen Rick y Morty\"\r\n            />\r\n          </div>\r\n          <div className=\"header__title\">\r\n            <h1>Busca tus personajes de Rick y Morty</h1>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","const getDataFromApi = () => {\r\n  return fetch('https://rickandmortyapi.com/api/character/#') //si no pones retorno, va a ser undefined\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data.results.sort(function (a, b) {\r\n        if (a.name < b.name) {\r\n          return -1;\r\n        }\r\n        if (a.name > b.name) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      }); //debemos retornar para que se pinte algo\r\n      //para limpiar lso codigos antes de traermelo, traerme un array, no todos los datos\r\n      //escribo la propiedad para acceder a ella return data.items por ejemplo\r\n    });\r\n};\r\n\r\nexport default getDataFromApi;\r\n\r\n//si no tienes ID en la API, la creamos aquÃ­\r\n//lo recorremos con map y aÃ±adimos algunas modificaciones:\r\n//tambien se podrÃ­a con un push\r\n\r\n// .then((data) => {\r\n//   const items =data.cart.items.map ((item, index)=> item.id='id-'+index;return item;});\r\n//   return items});\r\n// }; video a las 11.23\r\n","import React, { useEffect, useState } from 'react';\nimport '../stylesheets/App.scss';\nimport CharacterList from './CharacterList';\nimport CharacterDetail from './CharacterDetail';\nimport Filters from './Filters';\nimport getDataFromApi from '../services/getDataFromApi';\nimport { Route, Switch } from 'react-router-dom';\nimport ImgError from '../images/RickAndMortyError.png';\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  /* El estado por defecto del filterName serÃ¡, o vacÃ­o, o el valor que haya\n  guardado en el LOCALSTORAGE */\n  const [filterName, setFilterName] = useState(\n    localStorage.getItem('filterName') || ''\n  );\n  const [filterSpecies, setFilterSpecies] = useState('all');\n  const [filterStatus, setFilterStatus] = useState('all');\n  const [filterGender, setFilterGender] = useState('all');\n\n  /* Realizamos acciones en las diferentes fases del CICLO DE VIDA */\n\n  // 1. Llamamos a los datos del API\n  useEffect(() => {\n    getDataFromApi().then((data) => {\n      setCharacters(data);\n    });\n  }, []);\n\n  // 2. Guardamos en el LOCALSTORAGE el valor introducido en el input\n  //useEffect controla el ciclo de vida de nuestros componentes\n  useEffect(() => {\n    localStorage.setItem('filterName', filterName);\n  }, [filterName]);\n\n  /* ------------------------------------------------------------- */\n\n  //FunciÃ³n que se encarga de pintar el detalle de las tarjetas\n\n  const renderCharacterDetail = (props) => {\n    const routeCharacterId = parseInt(props.match.params.characterId);\n    const characterClicked = characters.find(\n      (character) => character.id === routeCharacterId\n    );\n    \n    // Si el url de la barra de busqueda/personaje existe, me pintas la tarjeta, sino el error\n    if (characterClicked) {\n      return (\n        <CharacterDetail\n          name={characterClicked.name}\n          status={characterClicked.status}\n          species={characterClicked.species}\n          origin={characterClicked.origin}\n          episodes={characterClicked.episode.length}\n          image={characterClicked.image}\n        />\n      );\n    } else {\n      return (\n        <div className=\"imgError\">\n          <img src={ImgError} alt=\"Personaje no encontrado\" />\n        </div>\n      );\n    }\n  };\n\n  // FunciÃ³n para ordenar alfabÃ©ticamente los personajes\n  const orderName = () => {\n    characters.sort((a, b) =>\n      a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1\n    );\n  };\n\n  /* FunciÃ³n por LIFTING, recogemos el valor introducido en el input y los select\n   y actualizamos el estado de cada filtro */\n  const handleFilters = (data) => {\n\n    if (data.id === 'filterName') {\n      setFilterName(data.value);\n    } else if (data.id === 'filterSpecies') {\n      setFilterSpecies(data.value);\n    } else if (data.id === 'filterStatus') {\n      setFilterStatus(data.value);\n    } else if (data.id === 'filterGender') {\n      setFilterGender(data.value);\n    }\n  };\n\n  /* FunciÃ³n que se encarga de pintar/filtrar las tarjetas por nombre, especie, estado y gÃ©nero */\n  const renderFilteredCharacter = () => {\n    orderName();\n    return characters\n      .filter((character) => {\n        const characters = character.name\n          .toUpperCase()\n          .includes(filterName.toUpperCase());\n        return characters;\n      })\n      .filter((character) => {\n        if (filterSpecies === 'all') {\n          return true;\n        } else {\n          return character.species === filterSpecies;\n        }\n      })\n      .filter((character) => {\n        if (filterStatus === 'all') {\n          return true;\n        } else {\n          return character.status === filterStatus;\n        }\n      })\n      .filter((character) => {\n        if (filterGender === 'all') {\n          return true;\n        } else {\n          return character.gender === filterGender;\n        }\n      });\n  };\n  return (\n    <div>\n      <Route exact path=\"/\">\n        <Filters\n          filterName={filterName}\n          filterSpecies={filterSpecies}\n          filterStatus={filterStatus}\n          filterGender={filterGender}\n          handleFilters={handleFilters}\n        />\n        <CharacterList\n          filterName={filterName}\n          characters={renderFilteredCharacter()}\n        />\n      </Route>\n      <Switch>\n        <Route\n          exact\n          path=\"/character/:characterId\"\n          render={renderCharacterDetail}\n        />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.scss';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}